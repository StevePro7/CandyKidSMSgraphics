                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.9 #9960 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module screen_manager
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _devkit_SMS_setTile
                             12 	.globl _devkit_SMS_setNextTileatXY
                             13 	.globl _engine_screen_manager_init
                             14 	.globl _engine_screen_manager_update
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;screen_manager.c:12: void engine_screen_manager_init()
                             47 ;	---------------------------------
                             48 ; Function engine_screen_manager_init
                             49 ; ---------------------------------
   0000                      50 _engine_screen_manager_init::
                             51 ;screen_manager.c:16: for( x = 2; x < 32; x += 2 )
   0000 06 02         [ 7]   52 	ld	b, #0x02
   0002                      53 00103$:
                             54 ;screen_manager.c:18: draw_tree( x, 0 );
   0002 C5            [11]   55 	push	bc
   0003 AF            [ 4]   56 	xor	a, a
   0004 F5            [11]   57 	push	af
   0005 33            [ 6]   58 	inc	sp
   0006 C5            [11]   59 	push	bc
   0007 33            [ 6]   60 	inc	sp
   0008 CDr96r00      [17]   61 	call	_draw_tree
   000B F1            [10]   62 	pop	af
   000C C1            [10]   63 	pop	bc
                             64 ;screen_manager.c:19: draw_tree( x, 22 );
   000D C5            [11]   65 	push	bc
   000E 3E 16         [ 7]   66 	ld	a, #0x16
   0010 F5            [11]   67 	push	af
   0011 33            [ 6]   68 	inc	sp
   0012 C5            [11]   69 	push	bc
   0013 33            [ 6]   70 	inc	sp
   0014 CDr96r00      [17]   71 	call	_draw_tree
   0017 F1            [10]   72 	pop	af
   0018 C1            [10]   73 	pop	bc
                             74 ;screen_manager.c:16: for( x = 2; x < 32; x += 2 )
   0019 04            [ 4]   75 	inc	b
   001A 04            [ 4]   76 	inc	b
   001B 78            [ 4]   77 	ld	a, b
   001C D6 20         [ 7]   78 	sub	a, #0x20
   001E 38 E2         [12]   79 	jr	C,00103$
                             80 ;screen_manager.c:22: for( y = 2; y < 22; y += 2 )
   0020 06 02         [ 7]   81 	ld	b, #0x02
   0022                      82 00105$:
                             83 ;screen_manager.c:24: draw_tree( 2, y );
   0022 C5            [11]   84 	push	bc
   0023 C5            [11]   85 	push	bc
   0024 33            [ 6]   86 	inc	sp
   0025 3E 02         [ 7]   87 	ld	a, #0x02
   0027 F5            [11]   88 	push	af
   0028 33            [ 6]   89 	inc	sp
   0029 CDr96r00      [17]   90 	call	_draw_tree
   002C F1            [10]   91 	pop	af
   002D C1            [10]   92 	pop	bc
                             93 ;screen_manager.c:25: draw_tree( 30, y );
   002E C5            [11]   94 	push	bc
   002F C5            [11]   95 	push	bc
   0030 33            [ 6]   96 	inc	sp
   0031 3E 1E         [ 7]   97 	ld	a, #0x1e
   0033 F5            [11]   98 	push	af
   0034 33            [ 6]   99 	inc	sp
   0035 CDr96r00      [17]  100 	call	_draw_tree
   0038 F1            [10]  101 	pop	af
   0039 C1            [10]  102 	pop	bc
                            103 ;screen_manager.c:22: for( y = 2; y < 22; y += 2 )
   003A 04            [ 4]  104 	inc	b
   003B 04            [ 4]  105 	inc	b
   003C 78            [ 4]  106 	ld	a, b
   003D D6 16         [ 7]  107 	sub	a, #0x16
   003F 38 E1         [12]  108 	jr	C,00105$
                            109 ;screen_manager.c:28: draw_titile();
   0041 C3r45r00      [10]  110 	jp  _draw_titile
                            111 ;screen_manager.c:31: void engine_screen_manager_update()
                            112 ;	---------------------------------
                            113 ; Function engine_screen_manager_update
                            114 ; ---------------------------------
   0044                     115 _engine_screen_manager_update::
                            116 ;screen_manager.c:33: }
   0044 C9            [10]  117 	ret
                            118 ;screen_manager.c:35: static void draw_titile()
                            119 ;	---------------------------------
                            120 ; Function draw_titile
                            121 ; ---------------------------------
   0045                     122 _draw_titile:
   0045 DD E5         [15]  123 	push	ix
   0047 DD 21 00 00   [14]  124 	ld	ix,#0
   004B DD 39         [15]  125 	add	ix,sp
   004D F5            [11]  126 	push	af
                            127 ;screen_manager.c:37: const unsigned int *pnt = ( const unsigned int * ) game_title__tilemap__bin;
   004E 01r00r00      [10]  128 	ld	bc, #_game_title__tilemap__bin+0
   0051 33            [ 6]  129 	inc	sp
   0052 33            [ 6]  130 	inc	sp
   0053 C5            [11]  131 	push	bc
                            132 ;screen_manager.c:45: for( j = 0; j < 4; j++ )
   0054 0E 00         [ 7]  133 	ld	c, #0x00
                            134 ;screen_manager.c:47: for( i = 0; i < 26; i++ )
   0056                     135 00109$:
   0056 41            [ 4]  136 	ld	b, c
   0057 04            [ 4]  137 	inc	b
   0058 04            [ 4]  138 	inc	b
   0059 79            [ 4]  139 	ld	a, c
   005A 87            [ 4]  140 	add	a, a
   005B 81            [ 4]  141 	add	a, c
   005C 87            [ 4]  142 	add	a, a
   005D 87            [ 4]  143 	add	a, a
   005E 81            [ 4]  144 	add	a, c
   005F 87            [ 4]  145 	add	a, a
   0060 5F            [ 4]  146 	ld	e, a
   0061 16 00         [ 7]  147 	ld	d, #0x00
   0063                     148 00103$:
                            149 ;screen_manager.c:49: devkit_SMS_setNextTileatXY( x + i, y + j );
   0063 7A            [ 4]  150 	ld	a, d
   0064 C6 04         [ 7]  151 	add	a, #0x04
   0066 C5            [11]  152 	push	bc
   0067 D5            [11]  153 	push	de
   0068 C5            [11]  154 	push	bc
   0069 33            [ 6]  155 	inc	sp
   006A F5            [11]  156 	push	af
   006B 33            [ 6]  157 	inc	sp
   006C CDr00r00      [17]  158 	call	_devkit_SMS_setNextTileatXY
   006F F1            [10]  159 	pop	af
   0070 D1            [10]  160 	pop	de
   0071 C1            [10]  161 	pop	bc
                            162 ;screen_manager.c:50: devkit_SMS_setTile( *pnt + j * 26 + i );
   0072 E1            [10]  163 	pop	hl
   0073 E5            [11]  164 	push	hl
   0074 7E            [ 7]  165 	ld	a, (hl)
   0075 23            [ 6]  166 	inc	hl
   0076 66            [ 7]  167 	ld	h, (hl)
   0077 6F            [ 4]  168 	ld	l, a
   0078 19            [11]  169 	add	hl, de
   0079 7D            [ 4]  170 	ld	a, l
   007A 82            [ 4]  171 	add	a, d
   007B C5            [11]  172 	push	bc
   007C D5            [11]  173 	push	de
   007D F5            [11]  174 	push	af
   007E 33            [ 6]  175 	inc	sp
   007F CDr00r00      [17]  176 	call	_devkit_SMS_setTile
   0082 33            [ 6]  177 	inc	sp
   0083 D1            [10]  178 	pop	de
   0084 C1            [10]  179 	pop	bc
                            180 ;screen_manager.c:47: for( i = 0; i < 26; i++ )
   0085 14            [ 4]  181 	inc	d
   0086 7A            [ 4]  182 	ld	a, d
   0087 D6 1A         [ 7]  183 	sub	a, #0x1a
   0089 38 D8         [12]  184 	jr	C,00103$
                            185 ;screen_manager.c:45: for( j = 0; j < 4; j++ )
   008B 0C            [ 4]  186 	inc	c
   008C 79            [ 4]  187 	ld	a, c
   008D D6 04         [ 7]  188 	sub	a, #0x04
   008F 38 C5         [12]  189 	jr	C,00109$
   0091 DD F9         [10]  190 	ld	sp, ix
   0093 DD E1         [14]  191 	pop	ix
   0095 C9            [10]  192 	ret
                            193 ;screen_manager.c:55: static void draw_tree( unsigned char x, unsigned char y )
                            194 ;	---------------------------------
                            195 ; Function draw_tree
                            196 ; ---------------------------------
   0096                     197 _draw_tree:
   0096 DD E5         [15]  198 	push	ix
   0098 DD 21 00 00   [14]  199 	ld	ix,#0
   009C DD 39         [15]  200 	add	ix,sp
                            201 ;screen_manager.c:57: const unsigned int *pnt = ( const unsigned int * ) tree_avoid__tilemap__bin;
   009E 11r00r00      [10]  202 	ld	de, #_tree_avoid__tilemap__bin
                            203 ;screen_manager.c:59: devkit_SMS_setNextTileatXY( x + 0, y + 0 ); 	devkit_SMS_setTile( *pnt + 0 );
   00A1 D5            [11]  204 	push	de
   00A2 DD 66 05      [19]  205 	ld	h, 5 (ix)
   00A5 DD 6E 04      [19]  206 	ld	l, 4 (ix)
   00A8 E5            [11]  207 	push	hl
   00A9 CDr00r00      [17]  208 	call	_devkit_SMS_setNextTileatXY
   00AC F1            [10]  209 	pop	af
   00AD D1            [10]  210 	pop	de
   00AE 6B            [ 4]  211 	ld	l, e
   00AF 62            [ 4]  212 	ld	h, d
   00B0 46            [ 7]  213 	ld	b, (hl)
   00B1 23            [ 6]  214 	inc	hl
   00B2 4E            [ 7]  215 	ld	c, (hl)
   00B3 D5            [11]  216 	push	de
   00B4 C5            [11]  217 	push	bc
   00B5 33            [ 6]  218 	inc	sp
   00B6 CDr00r00      [17]  219 	call	_devkit_SMS_setTile
   00B9 33            [ 6]  220 	inc	sp
   00BA D1            [10]  221 	pop	de
                            222 ;screen_manager.c:60: devkit_SMS_setNextTileatXY( x + 1, y + 0 ); 	devkit_SMS_setTile( *pnt + 1 );
   00BB DD 4E 04      [19]  223 	ld	c, 4 (ix)
   00BE 0C            [ 4]  224 	inc	c
   00BF C5            [11]  225 	push	bc
   00C0 D5            [11]  226 	push	de
   00C1 DD 46 05      [19]  227 	ld	b, 5 (ix)
   00C4 C5            [11]  228 	push	bc
   00C5 CDr00r00      [17]  229 	call	_devkit_SMS_setNextTileatXY
   00C8 F1            [10]  230 	pop	af
   00C9 D1            [10]  231 	pop	de
   00CA C1            [10]  232 	pop	bc
   00CB 6B            [ 4]  233 	ld	l, e
   00CC 62            [ 4]  234 	ld	h, d
   00CD 7E            [ 7]  235 	ld	a, (hl)
   00CE 23            [ 6]  236 	inc	hl
   00CF 46            [ 7]  237 	ld	b, (hl)
   00D0 47            [ 4]  238 	ld	b, a
   00D1 04            [ 4]  239 	inc	b
   00D2 C5            [11]  240 	push	bc
   00D3 D5            [11]  241 	push	de
   00D4 C5            [11]  242 	push	bc
   00D5 33            [ 6]  243 	inc	sp
   00D6 CDr00r00      [17]  244 	call	_devkit_SMS_setTile
   00D9 33            [ 6]  245 	inc	sp
   00DA D1            [10]  246 	pop	de
   00DB C1            [10]  247 	pop	bc
                            248 ;screen_manager.c:61: devkit_SMS_setNextTileatXY( x + 0, y + 1 ); 	devkit_SMS_setTile( *pnt + 2 );
   00DC DD 46 05      [19]  249 	ld	b, 5 (ix)
   00DF 04            [ 4]  250 	inc	b
   00E0 C5            [11]  251 	push	bc
   00E1 D5            [11]  252 	push	de
   00E2 C5            [11]  253 	push	bc
   00E3 33            [ 6]  254 	inc	sp
   00E4 DD 7E 04      [19]  255 	ld	a, 4 (ix)
   00E7 F5            [11]  256 	push	af
   00E8 33            [ 6]  257 	inc	sp
   00E9 CDr00r00      [17]  258 	call	_devkit_SMS_setNextTileatXY
   00EC F1            [10]  259 	pop	af
   00ED D1            [10]  260 	pop	de
   00EE C1            [10]  261 	pop	bc
   00EF 6B            [ 4]  262 	ld	l, e
   00F0 62            [ 4]  263 	ld	h, d
   00F1 7E            [ 7]  264 	ld	a, (hl)
   00F2 23            [ 6]  265 	inc	hl
   00F3 66            [ 7]  266 	ld	h, (hl)
   00F4 6F            [ 4]  267 	ld	l, a
   00F5 2C            [ 4]  268 	inc	l
   00F6 2C            [ 4]  269 	inc	l
   00F7 C5            [11]  270 	push	bc
   00F8 D5            [11]  271 	push	de
   00F9 7D            [ 4]  272 	ld	a, l
   00FA F5            [11]  273 	push	af
   00FB 33            [ 6]  274 	inc	sp
   00FC CDr00r00      [17]  275 	call	_devkit_SMS_setTile
   00FF 33            [ 6]  276 	inc	sp
   0100 D1            [10]  277 	pop	de
   0101 C1            [10]  278 	pop	bc
                            279 ;screen_manager.c:62: devkit_SMS_setNextTileatXY( x + 1, y + 1 ); 	devkit_SMS_setTile( *pnt + 3 );
   0102 D5            [11]  280 	push	de
   0103 C5            [11]  281 	push	bc
   0104 CDr00r00      [17]  282 	call	_devkit_SMS_setNextTileatXY
   0107 F1            [10]  283 	pop	af
   0108 E1            [10]  284 	pop	hl
   0109 4E            [ 7]  285 	ld	c, (hl)
   010A 23            [ 6]  286 	inc	hl
   010B 46            [ 7]  287 	ld	b, (hl)
   010C 41            [ 4]  288 	ld	b, c
   010D 04            [ 4]  289 	inc	b
   010E 04            [ 4]  290 	inc	b
   010F 04            [ 4]  291 	inc	b
   0110 C5            [11]  292 	push	bc
   0111 33            [ 6]  293 	inc	sp
   0112 CDr00r00      [17]  294 	call	_devkit_SMS_setTile
   0115 33            [ 6]  295 	inc	sp
   0116 DD E1         [14]  296 	pop	ix
   0118 C9            [10]  297 	ret
                            298 	.area _CODE
                            299 	.area _INITIALIZER
                            300 	.area _CABS (ABS)
