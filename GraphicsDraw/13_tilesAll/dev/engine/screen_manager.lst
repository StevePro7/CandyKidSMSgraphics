                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module screen_manager
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _devkit_SMS_addSprite
                             12 	.globl _devkit_SMS_setTile
                             13 	.globl _devkit_SMS_setNextTileatXY
                             14 	.globl _engine_input_manager_move_fire1
                             15 	.globl _engine_screen_manager_init
                             16 	.globl _engine_screen_manager_update
                             17 ;--------------------------------------------------------
                             18 ; special function registers
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _INITIALIZED
                             28 ;--------------------------------------------------------
                             29 ; absolute external ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DABS (ABS)
                             32 ;--------------------------------------------------------
                             33 ; global & static initialisations
                             34 ;--------------------------------------------------------
                             35 	.area _HOME
                             36 	.area _GSINIT
                             37 	.area _GSFINAL
                             38 	.area _GSINIT
                             39 ;--------------------------------------------------------
                             40 ; Home
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _HOME
                             44 ;--------------------------------------------------------
                             45 ; code
                             46 ;--------------------------------------------------------
                             47 	.area _CODE
                             48 ;screen_manager.c:16: void engine_screen_manager_init()
                             49 ;	---------------------------------
                             50 ; Function engine_screen_manager_init
                             51 ; ---------------------------------
   0000                      52 _engine_screen_manager_init::
                             53 ;screen_manager.c:22: for( x = 2; x < 32; x += 2 )
   0000 06 02         [ 7]   54 	ld	b,#0x02
   0002                      55 00103$:
                             56 ;screen_manager.c:24: draw_tiles( x, 0, 0 );
   0002 C5            [11]   57 	push	bc
   0003 21 00 00      [10]   58 	ld	hl,#0x0000
   0006 E5            [11]   59 	push	hl
   0007 C5            [11]   60 	push	bc
   0008 33            [ 6]   61 	inc	sp
   0009 CDrF8r00      [17]   62 	call	_draw_tiles
   000C F1            [10]   63 	pop	af
   000D 33            [ 6]   64 	inc	sp
   000E C1            [10]   65 	pop	bc
                             66 ;screen_manager.c:25: draw_tiles( x, 22, 0 );
   000F C5            [11]   67 	push	bc
   0010 21 16 00      [10]   68 	ld	hl,#0x0016
   0013 E5            [11]   69 	push	hl
   0014 C5            [11]   70 	push	bc
   0015 33            [ 6]   71 	inc	sp
   0016 CDrF8r00      [17]   72 	call	_draw_tiles
   0019 F1            [10]   73 	pop	af
   001A 33            [ 6]   74 	inc	sp
   001B C1            [10]   75 	pop	bc
                             76 ;screen_manager.c:22: for( x = 2; x < 32; x += 2 )
   001C 04            [ 4]   77 	inc	b
   001D 04            [ 4]   78 	inc	b
   001E 78            [ 4]   79 	ld	a,b
   001F D6 20         [ 7]   80 	sub	a, #0x20
   0021 38 DF         [12]   81 	jr	C,00103$
                             82 ;screen_manager.c:27: for( y = 2; y < 22; y += 2 )
   0023 06 02         [ 7]   83 	ld	b,#0x02
   0025                      84 00105$:
                             85 ;screen_manager.c:29: draw_tiles( 2, y, 0 );
   0025 C5            [11]   86 	push	bc
   0026 AF            [ 4]   87 	xor	a, a
   0027 F5            [11]   88 	push	af
   0028 33            [ 6]   89 	inc	sp
   0029 C5            [11]   90 	push	bc
   002A 33            [ 6]   91 	inc	sp
   002B 3E 02         [ 7]   92 	ld	a,#0x02
   002D F5            [11]   93 	push	af
   002E 33            [ 6]   94 	inc	sp
   002F CDrF8r00      [17]   95 	call	_draw_tiles
   0032 F1            [10]   96 	pop	af
   0033 33            [ 6]   97 	inc	sp
   0034 C1            [10]   98 	pop	bc
                             99 ;screen_manager.c:30: draw_tiles( 30, y, 0 );
   0035 C5            [11]  100 	push	bc
   0036 AF            [ 4]  101 	xor	a, a
   0037 F5            [11]  102 	push	af
   0038 33            [ 6]  103 	inc	sp
   0039 C5            [11]  104 	push	bc
   003A 33            [ 6]  105 	inc	sp
   003B 3E 1E         [ 7]  106 	ld	a,#0x1e
   003D F5            [11]  107 	push	af
   003E 33            [ 6]  108 	inc	sp
   003F CDrF8r00      [17]  109 	call	_draw_tiles
   0042 F1            [10]  110 	pop	af
   0043 33            [ 6]  111 	inc	sp
   0044 C1            [10]  112 	pop	bc
                            113 ;screen_manager.c:27: for( y = 2; y < 22; y += 2 )
   0045 04            [ 4]  114 	inc	b
   0046 04            [ 4]  115 	inc	b
   0047 78            [ 4]  116 	ld	a,b
   0048 D6 16         [ 7]  117 	sub	a, #0x16
   004A 38 D9         [12]  118 	jr	C,00105$
                            119 ;screen_manager.c:35: draw_tiles( 26, 6, 6 );
   004C 21 06 06      [10]  120 	ld	hl,#0x0606
   004F E5            [11]  121 	push	hl
   0050 3E 1A         [ 7]  122 	ld	a,#0x1a
   0052 F5            [11]  123 	push	af
   0053 33            [ 6]  124 	inc	sp
   0054 CDrF8r00      [17]  125 	call	_draw_tiles
                            126 ;screen_manager.c:37: draw_tiles( 26, 10, 10 );
   0057 33            [ 6]  127 	inc	sp
   0058 21 0A 0A      [10]  128 	ld	hl,#0x0a0a
   005B E3            [19]  129 	ex	(sp),hl
   005C 3E 1A         [ 7]  130 	ld	a,#0x1a
   005E F5            [11]  131 	push	af
   005F 33            [ 6]  132 	inc	sp
   0060 CDrF8r00      [17]  133 	call	_draw_tiles
                            134 ;screen_manager.c:38: draw_tiles( 28, 6, 4 );
   0063 33            [ 6]  135 	inc	sp
   0064 21 06 04      [10]  136 	ld	hl,#0x0406
   0067 E3            [19]  137 	ex	(sp),hl
   0068 3E 1C         [ 7]  138 	ld	a,#0x1c
   006A F5            [11]  139 	push	af
   006B 33            [ 6]  140 	inc	sp
   006C CDrF8r00      [17]  141 	call	_draw_tiles
                            142 ;screen_manager.c:40: draw_tiles( 28, 10, 12 );
   006F 33            [ 6]  143 	inc	sp
   0070 21 0A 0C      [10]  144 	ld	hl,#0x0c0a
   0073 E3            [19]  145 	ex	(sp),hl
   0074 3E 1C         [ 7]  146 	ld	a,#0x1c
   0076 F5            [11]  147 	push	af
   0077 33            [ 6]  148 	inc	sp
   0078 CDrF8r00      [17]  149 	call	_draw_tiles
                            150 ;screen_manager.c:41: draw_tiles( 26, 8, 14 );
   007B 33            [ 6]  151 	inc	sp
   007C 21 08 0E      [10]  152 	ld	hl,#0x0e08
   007F E3            [19]  153 	ex	(sp),hl
   0080 3E 1A         [ 7]  154 	ld	a,#0x1a
   0082 F5            [11]  155 	push	af
   0083 33            [ 6]  156 	inc	sp
   0084 CDrF8r00      [17]  157 	call	_draw_tiles
   0087 F1            [10]  158 	pop	af
   0088 33            [ 6]  159 	inc	sp
                            160 ;screen_manager.c:56: draw_title();
   0089 C3r97r00      [10]  161 	jp  _draw_title
                            162 ;screen_manager.c:61: void engine_screen_manager_update()
                            163 ;	---------------------------------
                            164 ; Function engine_screen_manager_update
                            165 ; ---------------------------------
   008C                     166 _engine_screen_manager_update::
                            167 ;screen_manager.c:77: unsigned char input = engine_input_manager_move_fire1();
   008C CDr00r00      [17]  168 	call	_engine_input_manager_move_fire1
                            169 ;screen_manager.c:78: if( input )
   008F 7D            [ 4]  170 	ld	a,l
   0090 B7            [ 4]  171 	or	a, a
                            172 ;screen_manager.c:80: draw_skullnc();
   0091 C2rB5r01      [10]  173 	jp	NZ,_draw_skullnc
                            174 ;screen_manager.c:84: draw_candykd();
   0094 C3r83r01      [10]  175 	jp  _draw_candykd
                            176 ;screen_manager.c:88: static void draw_title()
                            177 ;	---------------------------------
                            178 ; Function draw_title
                            179 ; ---------------------------------
   0097                     180 _draw_title:
   0097 DD E5         [15]  181 	push	ix
   0099 DD 21 00 00   [14]  182 	ld	ix,#0
   009D DD 39         [15]  183 	add	ix,sp
   009F F5            [11]  184 	push	af
   00A0 3B            [ 6]  185 	dec	sp
                            186 ;screen_manager.c:91: const unsigned int *pnt = ( const unsigned int * ) apex_tiles__tilemap__bin;
   00A1 01r00r00      [10]  187 	ld	bc,#_apex_tiles__tilemap__bin+0
                            188 ;screen_manager.c:103: for( j = 0; j < 4; j++ )
   00A4 DD 36 FD 00   [19]  189 	ld	-3 (ix),#0x00
   00A8 1E 00         [ 7]  190 	ld	e,#0x00
                            191 ;screen_manager.c:105: for( i = 0; i < w; i++ )
   00AA                     192 00111$:
   00AA DD 7E FD      [19]  193 	ld	a,-3 (ix)
   00AD C6 02         [ 7]  194 	add	a, #0x02
   00AF DD 77 FF      [19]  195 	ld	-1 (ix),a
   00B2 16 00         [ 7]  196 	ld	d,#0x00
   00B4                     197 00104$:
                            198 ;screen_manager.c:107: devkit_SMS_setNextTileatXY( x + i, y + j );
   00B4 7A            [ 4]  199 	ld	a,d
   00B5 FE 1A         [ 7]  200 	cp	a,#0x1a
   00B7 30 2C         [12]  201 	jr	NC,00107$
   00B9 C6 04         [ 7]  202 	add	a, #0x04
   00BB DD 77 FE      [19]  203 	ld	-2 (ix),a
   00BE C5            [11]  204 	push	bc
   00BF D5            [11]  205 	push	de
   00C0 DD 66 FF      [19]  206 	ld	h,-1 (ix)
   00C3 DD 6E FE      [19]  207 	ld	l,-2 (ix)
   00C6 E5            [11]  208 	push	hl
   00C7 CDr00r00      [17]  209 	call	_devkit_SMS_setNextTileatXY
   00CA F1            [10]  210 	pop	af
   00CB D1            [10]  211 	pop	de
   00CC C1            [10]  212 	pop	bc
                            213 ;screen_manager.c:108: devkit_SMS_setTile( *pnt + TITLE_START + j * w + i );
   00CD 69            [ 4]  214 	ld	l, c
   00CE 60            [ 4]  215 	ld	h, b
   00CF 7E            [ 7]  216 	ld	a, (hl)
   00D0 23            [ 6]  217 	inc	hl
   00D1 66            [ 7]  218 	ld	h,(hl)
   00D2 C6 34         [ 7]  219 	add	a, #0x34
   00D4 6F            [ 4]  220 	ld	l,a
   00D5 19            [11]  221 	add	hl, de
   00D6 7D            [ 4]  222 	ld	a,l
   00D7 82            [ 4]  223 	add	a, d
   00D8 C5            [11]  224 	push	bc
   00D9 D5            [11]  225 	push	de
   00DA F5            [11]  226 	push	af
   00DB 33            [ 6]  227 	inc	sp
   00DC CDr00r00      [17]  228 	call	_devkit_SMS_setTile
   00DF 33            [ 6]  229 	inc	sp
   00E0 D1            [10]  230 	pop	de
   00E1 C1            [10]  231 	pop	bc
                            232 ;screen_manager.c:105: for( i = 0; i < w; i++ )
   00E2 14            [ 4]  233 	inc	d
   00E3 18 CF         [12]  234 	jr	00104$
   00E5                     235 00107$:
                            236 ;screen_manager.c:103: for( j = 0; j < 4; j++ )
   00E5 7B            [ 4]  237 	ld	a,e
   00E6 C6 1A         [ 7]  238 	add	a, #0x1a
   00E8 5F            [ 4]  239 	ld	e,a
   00E9 DD 34 FD      [23]  240 	inc	-3 (ix)
   00EC DD 7E FD      [19]  241 	ld	a,-3 (ix)
   00EF D6 04         [ 7]  242 	sub	a, #0x04
   00F1 38 B7         [12]  243 	jr	C,00111$
   00F3 DD F9         [10]  244 	ld	sp, ix
   00F5 DD E1         [14]  245 	pop	ix
   00F7 C9            [10]  246 	ret
                            247 ;screen_manager.c:113: static void draw_tiles( unsigned char x, unsigned char y, unsigned char idx)
                            248 ;	---------------------------------
                            249 ; Function draw_tiles
                            250 ; ---------------------------------
   00F8                     251 _draw_tiles:
   00F8 DD E5         [15]  252 	push	ix
   00FA DD 21 00 00   [14]  253 	ld	ix,#0
   00FE DD 39         [15]  254 	add	ix,sp
                            255 ;screen_manager.c:116: const unsigned int *pnt = ( const unsigned int * ) apex_tiles__tilemap__bin;
   0100 01r00r00      [10]  256 	ld	bc,#_apex_tiles__tilemap__bin
                            257 ;screen_manager.c:118: devkit_SMS_setNextTileatXY( x + 0, y + 0 ); devkit_SMS_setTile( *pnt + idx + 0 );
   0103 C5            [11]  258 	push	bc
   0104 DD 66 05      [19]  259 	ld	h,5 (ix)
   0107 DD 6E 04      [19]  260 	ld	l,4 (ix)
   010A E5            [11]  261 	push	hl
   010B CDr00r00      [17]  262 	call	_devkit_SMS_setNextTileatXY
   010E F1            [10]  263 	pop	af
   010F C1            [10]  264 	pop	bc
   0110 69            [ 4]  265 	ld	l, c
   0111 60            [ 4]  266 	ld	h, b
   0112 5E            [ 7]  267 	ld	e,(hl)
   0113 23            [ 6]  268 	inc	hl
   0114 56            [ 7]  269 	ld	d,(hl)
   0115 7B            [ 4]  270 	ld	a,e
   0116 DD 86 06      [19]  271 	add	a, 6 (ix)
   0119 57            [ 4]  272 	ld	d,a
   011A C5            [11]  273 	push	bc
   011B D5            [11]  274 	push	de
   011C 33            [ 6]  275 	inc	sp
   011D CDr00r00      [17]  276 	call	_devkit_SMS_setTile
   0120 33            [ 6]  277 	inc	sp
   0121 C1            [10]  278 	pop	bc
                            279 ;screen_manager.c:119: devkit_SMS_setNextTileatXY( x + 1, y + 0 ); devkit_SMS_setTile( *pnt + idx + 1 );
   0122 DD 5E 04      [19]  280 	ld	e,4 (ix)
   0125 1C            [ 4]  281 	inc	e
   0126 C5            [11]  282 	push	bc
   0127 D5            [11]  283 	push	de
   0128 DD 56 05      [19]  284 	ld	d, 5 (ix)
   012B D5            [11]  285 	push	de
   012C CDr00r00      [17]  286 	call	_devkit_SMS_setNextTileatXY
   012F F1            [10]  287 	pop	af
   0130 D1            [10]  288 	pop	de
   0131 C1            [10]  289 	pop	bc
   0132 69            [ 4]  290 	ld	l, c
   0133 60            [ 4]  291 	ld	h, b
   0134 7E            [ 7]  292 	ld	a, (hl)
   0135 23            [ 6]  293 	inc	hl
   0136 56            [ 7]  294 	ld	d,(hl)
   0137 DD 86 06      [19]  295 	add	a, 6 (ix)
   013A 57            [ 4]  296 	ld	d,a
   013B 14            [ 4]  297 	inc	d
   013C C5            [11]  298 	push	bc
   013D D5            [11]  299 	push	de
   013E D5            [11]  300 	push	de
   013F 33            [ 6]  301 	inc	sp
   0140 CDr00r00      [17]  302 	call	_devkit_SMS_setTile
   0143 33            [ 6]  303 	inc	sp
   0144 D1            [10]  304 	pop	de
   0145 C1            [10]  305 	pop	bc
                            306 ;screen_manager.c:120: devkit_SMS_setNextTileatXY( x + 0, y + 1 ); devkit_SMS_setTile( *pnt + idx + 26 );
   0146 DD 56 05      [19]  307 	ld	d,5 (ix)
   0149 14            [ 4]  308 	inc	d
   014A C5            [11]  309 	push	bc
   014B D5            [11]  310 	push	de
   014C D5            [11]  311 	push	de
   014D 33            [ 6]  312 	inc	sp
   014E DD 7E 04      [19]  313 	ld	a,4 (ix)
   0151 F5            [11]  314 	push	af
   0152 33            [ 6]  315 	inc	sp
   0153 CDr00r00      [17]  316 	call	_devkit_SMS_setNextTileatXY
   0156 F1            [10]  317 	pop	af
   0157 D1            [10]  318 	pop	de
   0158 C1            [10]  319 	pop	bc
   0159 69            [ 4]  320 	ld	l, c
   015A 60            [ 4]  321 	ld	h, b
   015B 7E            [ 7]  322 	ld	a, (hl)
   015C 23            [ 6]  323 	inc	hl
   015D 66            [ 7]  324 	ld	h,(hl)
   015E DD 86 06      [19]  325 	add	a, 6 (ix)
   0161 C6 1A         [ 7]  326 	add	a, #0x1a
   0163 C5            [11]  327 	push	bc
   0164 D5            [11]  328 	push	de
   0165 F5            [11]  329 	push	af
   0166 33            [ 6]  330 	inc	sp
   0167 CDr00r00      [17]  331 	call	_devkit_SMS_setTile
   016A 33            [ 6]  332 	inc	sp
   016B CDr00r00      [17]  333 	call	_devkit_SMS_setNextTileatXY
   016E F1            [10]  334 	pop	af
   016F E1            [10]  335 	pop	hl
   0170 4E            [ 7]  336 	ld	c,(hl)
   0171 23            [ 6]  337 	inc	hl
   0172 46            [ 7]  338 	ld	b,(hl)
   0173 79            [ 4]  339 	ld	a,c
   0174 DD 86 06      [19]  340 	add	a, 6 (ix)
   0177 C6 1B         [ 7]  341 	add	a, #0x1b
   0179 47            [ 4]  342 	ld	b,a
   017A C5            [11]  343 	push	bc
   017B 33            [ 6]  344 	inc	sp
   017C CDr00r00      [17]  345 	call	_devkit_SMS_setTile
   017F 33            [ 6]  346 	inc	sp
   0180 DD E1         [14]  347 	pop	ix
   0182 C9            [10]  348 	ret
                            349 ;screen_manager.c:123: static void draw_candykd()
                            350 ;	---------------------------------
                            351 ; Function draw_candykd
                            352 ; ---------------------------------
   0183                     353 _draw_candykd:
                            354 ;screen_manager.c:129: devkit_SMS_addSprite( x + 0, y + 0, tile + 0 );
   0183 21 60 01      [10]  355 	ld	hl,#0x0160
   0186 E5            [11]  356 	push	hl
   0187 21 E0 40      [10]  357 	ld	hl,#0x40e0
   018A E5            [11]  358 	push	hl
   018B CDr00r00      [17]  359 	call	_devkit_SMS_addSprite
   018E F1            [10]  360 	pop	af
                            361 ;screen_manager.c:130: devkit_SMS_addSprite( x + 8, y + 0, tile + 1 );
   018F 21 61 01      [10]  362 	ld	hl, #0x0161
   0192 E3            [19]  363 	ex	(sp),hl
   0193 21 E8 40      [10]  364 	ld	hl,#0x40e8
   0196 E5            [11]  365 	push	hl
   0197 CDr00r00      [17]  366 	call	_devkit_SMS_addSprite
   019A F1            [10]  367 	pop	af
                            368 ;screen_manager.c:131: devkit_SMS_addSprite( x + 0, y + 8, tile + 6 );
   019B 21 66 01      [10]  369 	ld	hl, #0x0166
   019E E3            [19]  370 	ex	(sp),hl
   019F 21 E0 48      [10]  371 	ld	hl,#0x48e0
   01A2 E5            [11]  372 	push	hl
   01A3 CDr00r00      [17]  373 	call	_devkit_SMS_addSprite
   01A6 F1            [10]  374 	pop	af
                            375 ;screen_manager.c:132: devkit_SMS_addSprite( x + 8, y + 8, tile + 7 );
   01A7 21 67 01      [10]  376 	ld	hl, #0x0167
   01AA E3            [19]  377 	ex	(sp),hl
   01AB 21 E8 48      [10]  378 	ld	hl,#0x48e8
   01AE E5            [11]  379 	push	hl
   01AF CDr00r00      [17]  380 	call	_devkit_SMS_addSprite
   01B2 F1            [10]  381 	pop	af
   01B3 F1            [10]  382 	pop	af
   01B4 C9            [10]  383 	ret
                            384 ;screen_manager.c:134: static void draw_skullnc()
                            385 ;	---------------------------------
                            386 ; Function draw_skullnc
                            387 ; ---------------------------------
   01B5                     388 _draw_skullnc:
                            389 ;screen_manager.c:140: devkit_SMS_addSprite( x + 0, y + 0, tile + 0 );
   01B5 21 6E 01      [10]  390 	ld	hl,#0x016e
   01B8 E5            [11]  391 	push	hl
   01B9 21 E0 40      [10]  392 	ld	hl,#0x40e0
   01BC E5            [11]  393 	push	hl
   01BD CDr00r00      [17]  394 	call	_devkit_SMS_addSprite
   01C0 F1            [10]  395 	pop	af
                            396 ;screen_manager.c:141: devkit_SMS_addSprite( x + 8, y + 0, tile + 1 );
   01C1 21 6F 01      [10]  397 	ld	hl, #0x016f
   01C4 E3            [19]  398 	ex	(sp),hl
   01C5 21 E8 40      [10]  399 	ld	hl,#0x40e8
   01C8 E5            [11]  400 	push	hl
   01C9 CDr00r00      [17]  401 	call	_devkit_SMS_addSprite
   01CC F1            [10]  402 	pop	af
                            403 ;screen_manager.c:142: devkit_SMS_addSprite( x + 0, y + 8, tile + 6 );
   01CD 21 74 01      [10]  404 	ld	hl, #0x0174
   01D0 E3            [19]  405 	ex	(sp),hl
   01D1 21 E0 48      [10]  406 	ld	hl,#0x48e0
   01D4 E5            [11]  407 	push	hl
   01D5 CDr00r00      [17]  408 	call	_devkit_SMS_addSprite
   01D8 F1            [10]  409 	pop	af
                            410 ;screen_manager.c:143: devkit_SMS_addSprite( x + 8, y + 8, tile + 7 );
   01D9 21 75 01      [10]  411 	ld	hl, #0x0175
   01DC E3            [19]  412 	ex	(sp),hl
   01DD 21 E8 48      [10]  413 	ld	hl,#0x48e8
   01E0 E5            [11]  414 	push	hl
   01E1 CDr00r00      [17]  415 	call	_devkit_SMS_addSprite
   01E4 F1            [10]  416 	pop	af
   01E5 F1            [10]  417 	pop	af
   01E6 C9            [10]  418 	ret
                            419 	.area _CODE
                            420 	.area _INITIALIZER
                            421 	.area _CABS (ABS)
